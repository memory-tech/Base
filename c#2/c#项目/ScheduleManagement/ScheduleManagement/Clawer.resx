<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yUP1/9qVCmRJv3eSAAAAAElFTkSuQmCC
</value>
  </data>
</root>